{"ast":null,"code":"import ProductService from \"../../services/product.service.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"ProductModal\",\n  props: {\n    showModal: Boolean,\n    // Ajoutez une prop pour contrôler l'état du modal\n    categories: Array // Prop to pass categories data\n  },\n  data() {\n    return {\n      buttonText: \"Upload Image\",\n      uploadedImageURL: null,\n      // Add a data property to store the uploaded image\n      invalidPrice: false,\n      invalidQte: false,\n      formData: {\n        name: \"\",\n        category: {},\n        quantity: 0,\n        description: \"\",\n        price: 0,\n        image: null\n      },\n      selectedFile: null,\n      imageData: null\n    };\n  },\n  // created() {\n  //   axios.get(\"http://localhost:8080/api/\").then((response) => {\n  //     this.imageData = response.data.files;\n  //   });\n  // },\n  // beforeUpdate() {\n  //   axios.get(\"http://localhost:8080/api/\").then((response) => {\n  //     this.imageData = response.data.files;\n  //   });\n  // },\n\n  methods: {\n    handleImageChange(event) {\n      this.formData.image = event.target.files[0];\n    },\n    closeModal() {\n      this.$emit(\"close\"); // Émet un événement pour fermer le modal\n    },\n    selectImage() {\n      this.$refs.fileInput.click();\n    },\n    onFileSelected() {\n      this.selectedFile = this.$refs.file.files[0];\n    },\n    handleImageUpload(event) {\n      // const file = event.target.files[0];\n      // this.uploadedImageURL = URL.createObjectURL(file);\n      // this.buttonText = \"Change Image\";\n    },\n    async saveProduct() {\n      // Convert the price to a number\n      const price = parseFloat(this.formData.price);\n\n      // Check if the price is a valid number\n      if (isNaN(price) || price <= 0) {\n        // Notify the user that the price is invalid\n        this.invalidPrice = true;\n        this.invalidQte = false;\n        return;\n      }\n      this.invalidPrice = false;\n      if (this.formData.quantity <= 0) {\n        // Notify the user that the quantity is invalid\n        this.invalidQte = true;\n        return;\n      }\n      const fd = new FormData();\n      fd.append(\"file\", this.selectedFile);\n      console.log(fd);\n      // Create a new product object using formData\n      const newProduct = {\n        name: this.formData.name,\n        category: this.formData.category,\n        quantity: parseInt(this.formData.quantity),\n        description: this.formData.description,\n        price: price,\n        image: this.formData.image\n      };\n      try {\n        await ProductService.createProduct(newProduct);\n        await axios.post(\"http://localhost:8080/api/upload\", fd);\n        // Emit an event to save the new product\n        this.$emit(\"save\", newProduct);\n        this.closeModal();\n      } catch (error) {\n        // Handle error\n        console.log(\"image product not selected\", error);\n        console.error(\"Error creating product:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["ProductService","axios","name","props","showModal","Boolean","categories","Array","data","buttonText","uploadedImageURL","invalidPrice","invalidQte","formData","category","quantity","description","price","image","selectedFile","imageData","methods","handleImageChange","event","target","files","closeModal","$emit","selectImage","$refs","fileInput","click","onFileSelected","file","handleImageUpload","saveProduct","parseFloat","isNaN","fd","FormData","append","console","log","newProduct","parseInt","createProduct","post","error"],"sources":["C:\\Users\\hp\\ShoppableApplication\\admin\\src\\components\\Product\\ProductModal.vue"],"sourcesContent":["<template>\r\n  <!-- Main modal -->\r\n  <Transition name=\"modal\">\r\n    <div\r\n      tabindex=\"-1\"\r\n      class=\"modal-mask hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center md:inset-0 h-[calc(100%-1rem)] max-h-full\"\r\n    >\r\n      <div class=\"relative p-4 w-full max-w-3xl max-h-full\">\r\n        <!-- Modal content -->\r\n        <div class=\"relative bg-white rounded-lg shadow\">\r\n          <!-- Modal header -->\r\n          <div\r\n            class=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\"\r\n          >\r\n            <h3 class=\"text-lg font-semibold text-gray-900\">\r\n              Create New Product\r\n            </h3>\r\n            <button\r\n              type=\"button\"\r\n              class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center\"\r\n              @click=\"closeModal\"\r\n            >\r\n              <svg\r\n                class=\"w-3 h-3\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 14 14\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  stroke-width=\"2\"\r\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                />\r\n              </svg>\r\n              <span class=\"sr-only\">Close modal</span>\r\n            </button>\r\n          </div>\r\n          <!-- Modal body -->\r\n          <form\r\n            class=\"p-4 md:p-5\"\r\n            @submit.prevent=\"saveProduct\"\r\n            method=\"POST\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <div class=\"grid gap-4 mb-4 grid-cols-3 grid-cols-custom\">\r\n              <div class=\"col-span-2\">\r\n                <label\r\n                  for=\"name\"\r\n                  class=\"block mb-2 text-sm font-medium text-left text-gray-900\"\r\n                  >Name</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"formData.name\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5\"\r\n                  placeholder=\"Type product name\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-span-1 row-span-4\">\r\n                <label\r\n                  for=\"product-image\"\r\n                  class=\"block mb-2 text-sm font-medium text-left text-gray-900\"\r\n                  >Product Image</label\r\n                >\r\n                <div\r\n                  class=\"rounded-lg border border-dashed border-gray-900/25 px-4 py-4\"\r\n                >\r\n                  <div\r\n                    class=\"block flex justify-center mb-2 text-sm text-center leading-6 text-gray-600\"\r\n                  >\r\n                    <label\r\n                      for=\"input-files\"\r\n                      class=\"relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 hover:text-indigo-500\"\r\n                    >\r\n                     <button type=\"button\" @click=\"selectImage\">\r\n                        {{ buttonText }}\r\n                      </button> \r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"file\"\r\n                        id=\"input-files\"\r\n                        accept=\"image/png, image/jpeg\"\r\n                        ref=\"file\"\r\n                        @change=\"handleImageChange\"\r\n                      />\r\n                    </label>\r\n                    <p class=\"pl-1\">or drag and drop</p>\r\n                  </div>\r\n                  \r\n                  <div v-if=\"uploadedImageURL\">\r\n                    <img\r\n                      :src=\"uploadedImageURL\"\r\n                      alt=\"Uploaded Image\"\r\n                      width=\"230\"\r\n                      height=\"300\"\r\n                      class=\"max-w-full max-h-full rounded-md m-auto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-span-2\">\r\n                <label\r\n                  for=\"category\"\r\n                  class=\"block mb-2 text-sm font-medium text-left text-gray-900\"\r\n                  >Category</label\r\n                >\r\n                <select\r\n                  v-model=\"formData.category\"\r\n                  id=\"category\"\r\n                  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5\"\r\n                  required\r\n                >\r\n                  <option\r\n                    v-for=\"category in categories\"\r\n                    :key=\"category.id\"\r\n                    :value=\"category.id\"\r\n                  >\r\n                    {{ category.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-span-1\">\r\n                <label\r\n                  for=\"price\"\r\n                  class=\"block mb-2 text-sm font-medium text-left text-gray-900\"\r\n                  >Price</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"formData.price\"\r\n                  name=\"price\"\r\n                  id=\"price\"\r\n                  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5\"\r\n                  required\r\n                />\r\n                <div v-if=\"invalidPrice\" class=\"text-xs pt-2 text-red-600\">\r\n                  Please enter a valid number\r\n                </div>\r\n              </div>\r\n              <div class=\"col-span-1\">\r\n                <label\r\n                  for=\"quantity\"\r\n                  class=\"block mb-2 text-sm font-medium text-left text-gray-900\"\r\n                  >Quantity</label\r\n                >\r\n                <input\r\n                  type=\"number\"\r\n                  v-model=\"formData.quantity\"\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5\"\r\n                  required\r\n                />\r\n                <div v-if=\"invalidQte\" class=\"text-xs pt-2 text-red-600\">\r\n                  Please enter a valid number\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-span-2\">\r\n                <label\r\n                  for=\"description\"\r\n                  class=\"block mb-2 text-sm font-medium text-left text-gray-900\"\r\n                  >Product Description</label\r\n                >\r\n                <textarea\r\n                  v-model=\"formData.description\"\r\n                  id=\"description\"\r\n                  rows=\"4\"\r\n                  class=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\r\n                  placeholder=\"Write product description here\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"text-white mt-4 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2 text-center\"\r\n            >\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Transition>\r\n</template>\r\n\r\n<script>\r\nimport ProductService from \"../../services/product.service.js\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"ProductModal\",\r\n  props: {\r\n    showModal: Boolean, // Ajoutez une prop pour contrôler l'état du modal\r\n    categories: Array, // Prop to pass categories data\r\n  },\r\n  data() {\r\n    return {\r\n      buttonText: \"Upload Image\",\r\n      uploadedImageURL: null, // Add a data property to store the uploaded image\r\n      invalidPrice: false,\r\n      invalidQte: false,\r\n      formData: {\r\n        name: \"\",\r\n        category: {},\r\n        quantity: 0,\r\n        description: \"\",\r\n        price: 0,\r\n        image: null,\r\n      },\r\n      selectedFile: null,\r\n      imageData: null,\r\n    };\r\n  },\r\n\r\n  // created() {\r\n  //   axios.get(\"http://localhost:8080/api/\").then((response) => {\r\n  //     this.imageData = response.data.files;\r\n  //   });\r\n  // },\r\n  // beforeUpdate() {\r\n  //   axios.get(\"http://localhost:8080/api/\").then((response) => {\r\n  //     this.imageData = response.data.files;\r\n  //   });\r\n  // },\r\n\r\n  methods: {\r\n    handleImageChange(event) {\r\n      this.formData.image = event.target.files[0];\r\n    },\r\n    closeModal() {\r\n      this.$emit(\"close\"); // Émet un événement pour fermer le modal\r\n    },\r\n    selectImage() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    onFileSelected() {\r\n      this.selectedFile = this.$refs.file.files[0];\r\n    },\r\n    handleImageUpload(event) {\r\n      // const file = event.target.files[0];\r\n      // this.uploadedImageURL = URL.createObjectURL(file);\r\n      // this.buttonText = \"Change Image\";\r\n    },\r\n\r\n    async saveProduct() {\r\n      // Convert the price to a number\r\n      const price = parseFloat(this.formData.price);\r\n\r\n      // Check if the price is a valid number\r\n      if (isNaN(price) || price <= 0) {\r\n        // Notify the user that the price is invalid\r\n        this.invalidPrice = true;\r\n        this.invalidQte = false;\r\n        return;\r\n      }\r\n      this.invalidPrice = false;\r\n\r\n      if (this.formData.quantity <= 0) {\r\n        // Notify the user that the quantity is invalid\r\n        this.invalidQte = true;\r\n        return;\r\n      }\r\n\r\n      const fd = new FormData();\r\n      fd.append(\"file\", this.selectedFile);\r\n      console.log(fd);\r\n      // Create a new product object using formData\r\n      const newProduct = {\r\n        name: this.formData.name,\r\n        category: this.formData.category,\r\n        quantity: parseInt(this.formData.quantity),\r\n        description: this.formData.description,\r\n        price: price,\r\n        image: this.formData.image,\r\n      };\r\n      try {\r\n        await ProductService.createProduct(newProduct);\r\n        await axios.post(\"http://localhost:8080/api/upload\", fd);\r\n        // Emit an event to save the new product\r\n        this.$emit(\"save\", newProduct);\r\n        this.closeModal();\r\n      } catch (error) {\r\n        // Handle error\r\n        console.log(\"image product not selected\", error);\r\n\r\n        console.error(\"Error creating product:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n@import \"./styleModal.css\";\r\n\r\n.modal-mask {\r\n  background-color: rgb(0, 0, 0, 0.5);\r\n}\r\n.grid-cols-custom {\r\n  grid-template-columns: 1fr 1fr 2fr; /* 3ème colonne prend 2 fois la taille de la 1ère */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}