{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2c68ea90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Edit User\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"Username:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Save Changes\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"modal\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Modal content \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n      class: \"close\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.close && $options.close(...args))\n    }, \"Ã—\"), _hoisted_3, _createCommentVNode(\" Input fields for editing user data \"), _createElementVNode(\"form\", {\n      onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submit && $options.submit(...args), [\"prevent\"]))\n    }, [_createCommentVNode(\" Input fields for user data \"), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editedUser.userName = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedUser.userName]])]), _createCommentVNode(\" Add other input fields for editing email, phone number, etc. \"), _hoisted_5], 32 /* NEED_HYDRATION */)])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createBlock","_Transition","name","default","_withCtx","_hoisted_1","_createCommentVNode","_hoisted_2","onClick","_cache","args","$options","close","_hoisted_3","onSubmit","_withModifiers","submit","_hoisted_4","id","$event","$data","editedUser","userName","_hoisted_5","_"],"sources":["C:\\Users\\Utente\\Desktop\\ShoppableApplication\\admin\\src\\components\\EditUserModal.vue"],"sourcesContent":["<template>\r\n  <Transition name=\"modal\">\r\n    <div class=\"modal\">\r\n      <!-- Modal content -->\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"close\">&times;</span>\r\n        <h2>Edit User</h2>\r\n        <!-- Input fields for editing user data -->\r\n        <form @submit.prevent=\"submit\">\r\n          <!-- Input fields for user data -->\r\n          <div>\r\n            <label for=\"username\">Username:</label>\r\n            <input type=\"text\" id=\"username\" v-model=\"editedUser.userName\" />\r\n          </div>\r\n          <!-- Add other input fields for editing email, phone number, etc. -->\r\n          <button type=\"submit\">Save Changes</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </Transition>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      editedUser: { ...this.user }, // Initialize editedUser with the user prop\r\n    };\r\n  },\r\n  methods: {\r\n    close() {\r\n      // Emit a close event to notify the parent component\r\n      this.$emit(\"close\");\r\n    },\r\n    submit() {\r\n      // Emit an event with the updated user data\r\n      this.$emit(\"edit-user\", this.editedUser);\r\n      // Close the modal\r\n      this.close();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles for the modal */\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgb(0, 0, 0);\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n.modal-content {\r\n  background-color: #fefefe;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n}\r\n.close {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n.close:hover,\r\n.close:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;EAESA,KAAK,EAAC;AAAO;;EAEXA,KAAK,EAAC;AAAe;gEAExBC,mBAAA,CAAkB,YAAd,WAAS;gEAKTA,mBAAA,CAAuC;EAAhCC,GAAG,EAAC;AAAU,GAAC,WAAS;gEAIjCD,mBAAA,CAA2C;EAAnCE,IAAI,EAAC;AAAQ,GAAC,cAAY;;uBAd1CC,YAAA,CAkBaC,WAAA;IAlBDC,IAAI,EAAC;EAAO;IAD1BC,OAAA,EAAAC,QAAA,CAEI,MAgBM,CAhBNP,mBAAA,CAgBM,OAhBNQ,UAgBM,GAfJC,mBAAA,mBAAsB,EACtBT,mBAAA,CAaM,OAbNU,UAaM,GAZJV,mBAAA,CAAiD;MAA3CD,KAAK,EAAC,OAAO;MAAEY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;OAAE,GAAO,GAC1CG,UAAkB,EAClBP,mBAAA,wCAA2C,EAC3CT,mBAAA,CAQO;MARAiB,QAAM,EAAAL,MAAA,QAAAA,MAAA,MARrBM,cAAA,KAAAL,IAAA,KAQ+BC,QAAA,CAAAK,MAAA,IAAAL,QAAA,CAAAK,MAAA,IAAAN,IAAA,CAAM;QAC3BJ,mBAAA,gCAAmC,EACnCT,mBAAA,CAGM,cAFJoB,UAAuC,E,gBACvCpB,mBAAA,CAAiE;MAA1DE,IAAI,EAAC,MAAM;MAACmB,EAAE,EAAC,UAAU;MAZ5C,uBAAAT,MAAA,QAAAA,MAAA,MAAAU,MAAA,IAYsDC,KAAA,CAAAC,UAAU,CAACC,QAAQ,GAAAH,MAAA;mDAAnBC,KAAA,CAAAC,UAAU,CAACC,QAAQ,E,KAE/DhB,mBAAA,kEAAqE,EACrEiB,UAA2C,C;IAfrDC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}