{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vShow as _vShow } from \"vue\";\nconst _hoisted_1 = {\n  class: \"img__container\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = [\"onClick\", \"onMouseenter\", \"onMouseleave\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"hotspot__settings\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"hotspot__text\"\n};\nconst _hoisted_9 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_10 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"hotspots\", 'hotspots_' + $data.id])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    class: _normalizeClass([\"img-fluid hotspots__image\", {\n      editing: $options.editMode\n    }]),\n    style: {},\n    src: $props.image,\n    alt: \"\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addHotSpots && $options.addHotSpots(...args))\n  }, null, 10 /* CLASS, PROPS */, _hoisted_2), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dots, (dot, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"hotspot__container text-center\", 'dot-' + i]),\n      key: dot.i,\n      style: _normalizeStyle('top:' + dot.posY + '%;left:' + dot.posX + '%;'),\n      onClick: $event => $options.showHint(dot, i),\n      onMouseenter: $event => $options.showHintOnEnter(dot, i),\n      onMouseleave: $event => $options.showHintOnLeave(dot)\n    }, [dot.type === 'dot' ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"text-center hotspot hotspot_dot\",\n      style: _normalizeStyle('background:' + $props.dotsColor + ';'),\n      onClick: $event => $options.clickDot(dot, i)\n    }, null, 12 /* STYLE, PROPS */, _hoisted_4)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <div v-if=\\\"dot.type === 'square'\\\"\\r\\n          class=\\\"text-center hotspot hotspot_square\\\"\\r\\n          :style=\\\"'background:' + dotsColor + ';'\\\"\\r\\n          @click=\\\"clickDot(dot, i)\\\"\\r\\n        ></div>  \"), $options.editMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"span\", {\n      class: \"settings__close\",\n      onClick: $event => $options.deleteHotSpot(i)\n    }, \"X\", 8 /* PROPS */, _hoisted_6), $props.defaultInput ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      class: \"settings__text\",\n      onClick: $event => dot.show_input = !dot.show_input\n    }, \"T\", 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true), $props.defaultInput && dot.show_input ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"hotspot__input\",\n      \"onUpdate:modelValue\": $event => dot.text = $event,\n      onChange: $event => $options.changeDot(dot, i),\n      style: _normalizeStyle($data.inputStylesObj)\n    }, null, 44 /* STYLE, PROPS, NEED_HYDRATION */, _hoisted_9), [[_vModelText, dot.text]])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"div\", {\n      class: _normalizeClass([\"hotspot__hint\", 'hint-' + i]),\n      style: _normalizeStyle($data.hintStyleObj)\n    }, [!$props.customHint ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createTextVNode(_toDisplayString(dot.text), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      innerHTML: $props.customHint\n    }, null, 8 /* PROPS */, _hoisted_10))], 6 /* CLASS, STYLE */), [[_vShow, !$options.editMode && dot.show_hint && dot.text]])], 46 /* CLASS, STYLE, PROPS, NEED_HYDRATION */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_normalizeClass","$data","id","_createElementVNode","_hoisted_1","editing","$options","editMode","style","src","$props","image","alt","onClick","_cache","args","addHotSpots","_hoisted_2","_Fragment","_renderList","dots","dot","i","_normalizeStyle","posY","posX","$event","showHint","onMouseenter","showHintOnEnter","onMouseleave","showHintOnLeave","type","dotsColor","clickDot","_hoisted_4","_createCommentVNode","_hoisted_5","deleteHotSpot","_hoisted_6","defaultInput","show_input","_hoisted_7","_hoisted_8","text","onChange","changeDot","inputStylesObj","_hoisted_9","hintStyleObj","customHint","_createTextVNode","_toDisplayString","innerHTML","_hoisted_10","show_hint","_hoisted_3"],"sources":["C:\\Users\\Utente\\Desktop\\ShoppableApplication\\admin\\src\\components\\HotSpots.vue"],"sourcesContent":["<template>\r\n  <div class=\"hotspots\" :class=\"'hotspots_' + id\">\r\n    <div class=\"img__container\" >\r\n      <img class=\"img-fluid hotspots__image\" style=\"\"\r\n        :src=\"image\"\r\n        alt=\"\"  @click=\"addHotSpots\"\r\n        :class=\"{editing: editMode}\"\r\n      >\r\n      <div class=\"hotspot__container text-center\" v-for=\"(dot, i) in dots\"\r\n        :class=\"'dot-' + i\"\r\n        :key=\"dot.i\"\r\n        :style=\"'top:' + dot.posY +'%;left:' + dot.posX + '%;'\"\r\n        @click=\"showHint(dot, i)\"\r\n        @mouseenter=\"showHintOnEnter(dot, i)\"\r\n        @mouseleave=\"showHintOnLeave(dot)\"> \r\n        <div class=\"text-center hotspot hotspot_dot\" \r\n            v-if=\"dot.type === 'dot'\" :style=\"'background:' + dotsColor + ';'\"\r\n            @click=\"clickDot(dot, i)\"\r\n        ></div>\r\n        <!-- <div v-if=\"dot.type === 'square'\"\r\n          class=\"text-center hotspot hotspot_square\"\r\n          :style=\"'background:' + dotsColor + ';'\"\r\n          @click=\"clickDot(dot, i)\"\r\n        ></div>  -->\r\n        <div v-if=\"editMode\" class=\"hotspot__settings\">\r\n          <span class=\"settings__close\" @click=\"deleteHotSpot(i)\">X</span> \r\n          <span v-if=\"defaultInput\" class=\"settings__text\" @click=\"dot.show_input = !dot.show_input\">T</span>\r\n          <div v-if=\"defaultInput && dot.show_input\" class=\"hotspot__text\">\r\n            <input class=\"hotspot__input\"\r\n              v-model=\"dot.text\"\r\n              @change=\"changeDot(dot, i)\"\r\n              :style=\"inputStylesObj\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div v-show=\"!editMode && dot.show_hint && dot.text\" \r\n          class=\"hotspot__hint\"\r\n          :class=\"'hint-' + i\"\r\n          :style=\"hintStyleObj\"> \r\n          <template v-if=\"!customHint\"> {{ dot.text }} </template>     \r\n          <template v-else>\r\n            <div v-html=\"customHint\">\r\n\r\n            </div>\r\n          </template>     \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\nexport default {\r\n  name: 'HotSpot',\r\n  props: {\r\n    edit: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    showOnClick: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    onHover: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    onImageClick: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    defaultInput: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    image: String,\r\n    data: Array,\r\n    dotsArr: Array,\r\n    dotsColor: String,\r\n    hintBg: String,\r\n    hintTextColor: String,\r\n    hintStyle: Object,\r\n    inputBg: String,\r\n    inputTextColor: String,\r\n    inputStyle: Object,\r\n    customHint: String\r\n  },\r\n  data() {\r\n    return {\r\n      imageSrc: this.image,\r\n      dots: [],\r\n      hintStyleObj: {\r\n        background: this.hintBg,\r\n        color: this.hintTextColor\r\n      },\r\n      inputStylesObj:{\r\n        background: this.inputBg,\r\n        color: this.inputTextColor\r\n      },\r\n      id: null,\r\n      container: null\r\n    }\r\n  },\r\n  computed: {\r\n    editMode: {\r\n      get() {\r\n        return this.edit\r\n      },\r\n      set(value) {\r\n        this.editMode = value\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler: function() {\r\n        if (this.data) {\r\n          this.dots = JSON.parse(JSON.stringify(this.data))\r\n        }\r\n      },\r\n      deep: true\r\n    },\r\n    hintBg: function() {\r\n      if (this.hintBg) {\r\n        this.hintStyleObj.background = this.hintBg\r\n      }\r\n    },\r\n    hintTextColor: function() {\r\n      if (this.hintTextColor) {\r\n        this.hintStyleObj.color = this.hintTextColor\r\n      }\r\n    },\r\n    hintStyle: function() {\r\n      if (this.hintStyle && Object.keys(this.hintStyle).length) {\r\n        this.hintStyleObj = JSON.parse(JSON.stringify(this.hintStyle))\r\n      }\r\n    },\r\n    inputStyle: function() {\r\n      if (this.inputStyle && Object.keys(this.inputStyle).length) {\r\n        this.inputStylesObj = JSON.parse(JSON.stringify(this.inputStyle))\r\n      }\r\n    },\r\n    inputBg: function() {\r\n      if (this.inputBg) {\r\n        this.inputStylesObj.background = this.inputBg\r\n      }\r\n    },\r\n    inputTextColor: function() {\r\n      if (this.inputTextColor) {\r\n        this.inputStylesObj.color = this.inputTextColor\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.id = Math.floor(Math.random() * 100) + 1;\r\n    if (this.data) {\r\n      this.dots = JSON.parse(JSON.stringify(this.data))\r\n    }\r\n    if (this.hintStyle && Object.keys(this.hintStyle).length) {\r\n        this.hintStyleObj = JSON.parse(JSON.stringify(this.hintStyle))\r\n      }\r\n    if (this.inputStyle && Object.keys(this.inputStyle).length) {\r\n      this.inputStylesObj = JSON.parse(JSON.stringify(this.inputStyle))\r\n    }  \r\n  },\r\n  updated() {\r\n    if (this.editMode) {\r\n      if (this.dots.length) {\r\n        this.dots.forEach(el => {\r\n          el.show_hint = false\r\n        })\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.container = document.querySelector('.hotspots_' + this.id)\r\n  },\r\n  methods: {\r\n    checkHintPosition(dot, i) {\r\n      if (!dot.show_hint) return\r\n      const image = this.container.querySelector('.hotspots__image')\r\n\r\n      if (!image) return\r\n      let imgPos = image.getBoundingClientRect()\r\n\r\n      let dotObj = this.container.querySelector(`.dot-${i}`)\r\n\r\n      if (!dotObj) return \r\n      let dotPos = dotObj.getBoundingClientRect()\r\n\r\n      let side = dot.posX <= 50 ? 'left' : 'right'\r\n      let hint = this.container.querySelector(`.hint-${i}`)\r\n\r\n      if (!hint) return\r\n      setTimeout(() => {\r\n        let move = null\r\n        if (side === 'left') {\r\n          let distance = dotPos[side] - imgPos[side]            \r\n          if (distance < hint.offsetWidth / 2) {\r\n            move = parseInt(hint.offsetWidth) / 2 - parseInt(distance) + 25\r\n          }\r\n        } else {\r\n          let distance = imgPos[side] - dotPos[side]\r\n          if (distance < hint.offsetWidth / 2) {\r\n            move = -(parseInt(hint.offsetWidth) / 2 - parseInt(distance))\r\n          }\r\n        }\r\n        hint.style.left = move + 'px'\r\n        if (dot.posY >= 50) {\r\n          let distanceY= imgPos.bottom - dotPos.bottom \r\n          if (distanceY < hint.offsetHeight + 26) {\r\n            let moveY = hint.offsetHeight + 26\r\n            hint.style.top = -moveY + 'px'\r\n          }       \r\n        }\r\n      }, 1)\r\n    },\r\n    ...mapActions(['updateDotsArr']),\r\n    addHotSpots(e) {\r\n      if (!this.editMode && !this.onImageClick) {\r\n        return \r\n      }\r\n      else if (!this.editMode && this.onImageClick && this.dots.length) {\r\n        this.showHintOnImageClick()\r\n      } else if (this.editMode){\r\n        const image = this.container.querySelector('.hotspots__image')\r\n        if (!image) return\r\n        let dot = {\r\n          text: '',\r\n          show_input: false,\r\n          show_hint: false,\r\n          posX: '',\r\n          posY: '',\r\n          color: 'white',\r\n          type: 'dot',\r\n          product: ''\r\n        }\r\n\r\n        let top_px = Math.round((e.clientY - image.getBoundingClientRect().top - 12) );\r\n        let left_px = Math.round((e.clientX - image.getBoundingClientRect().left - 12) );\r\n        dot.posX = left_px / image.offsetWidth * 100;\r\n        dot.posY = top_px / image.offsetHeight * 100;\r\n        this.dots.push(dot)\r\n        let obj = {\r\n          index: this.dots.length - 1,\r\n          obj:  Object.assign({}, dot)\r\n        }\r\n        this.$emit('changeArr', this.copyDotsArr())\r\n        this.$emit('add', obj)\r\n        \r\n        this.updateDotsArr(this.dots);\r\n    } \r\n    },\r\n    deleteHotSpot(index) {\r\n      let obj = {\r\n          index: index,\r\n          obj: Object.assign({}, this.dots[index])\r\n        }\r\n      this.$emit('delete', obj)\r\n      this.dots.splice(index, 1)\r\n      this.$emit('changeArr', this.dots)\r\n      this.updateDotsArr(this.dots);\r\n    },\r\n    showHintOnImageClick() {\r\n      if (this.dots.find(f => !f.show_hint)) {\r\n        this.dots.forEach ((dot, index) => {\r\n          dot.show_hint = true\r\n          this.addTextToHint(dot, index)\r\n          this.checkHintPosition(dot, index)\r\n        })\r\n      } else {\r\n        this.dots.forEach ((dot) => {\r\n          dot.show_hint = false\r\n        })\r\n      }\r\n    },\r\n    showHint(dot, i) {\r\n      if (!this.editMode) {\r\n        if (this.showOnClick) {\r\n          dot.show_hint = !dot.show_hint\r\n          this.addTextToHint(dot, i)\r\n          this.checkHintPosition(dot, i)\r\n        }\r\n      }\r\n    },\r\n    showHintOnEnter(dot, i) {\r\n      if (this.onHover) {\r\n        dot.show_hint = true\r\n        this.addTextToHint(dot, i)\r\n        this.checkHintPosition(dot, i)\r\n      }\r\n      else return  \r\n    },\r\n    showHintOnLeave(dot) {\r\n      if (this.onHover)\r\n        dot.show_hint = false\r\n      else return  \r\n    },\r\n    changeDot(dot, index) {\r\n      let obj = {\r\n          index: index,\r\n          obj: Object.assign({}, dot)\r\n        }\r\n      this.$emit('changeDot', obj)\r\n      this.$emit('changeArr', this.dots)\r\n\r\n    },\r\n    clickDot(dot, index) {\r\n      if (!this.editMode) return\r\n      let obj = {\r\n          index: index,\r\n          obj: Object.assign({}, dot)\r\n        }\r\n      this.$emit('clickDot', obj)\r\n    },\r\n    copyDotsArr() {\r\n      let arr = []\r\n      this.dots.forEach(e => {\r\n        arr.push(Object.assign({}, e))\r\n      })\r\n      return arr\r\n    },\r\n    addTextToHint(dot, i) {\r\n      if (this.customHint) {\r\n        // let hint = this.$refs['hint'][i]\r\n        let hint = this.container.querySelector(`.hint-${i}`)\r\n\r\n        if (hint) {\r\n          let textContainer = hint.querySelector('.hint__text-content')\r\n          if (textContainer) {\r\n            textContainer.textContent = dot.text\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"css\" >\r\n.hotspots {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.img__container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.img__container img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  cursor: pointer;\r\n}\r\n.editing {\r\n  filter: brightness(0.5);\r\n}\r\n.hotspot__container {\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n}\r\n.hotspot {\r\n  text-align: center;\r\n  opacity: 0.9;\r\n  background: #fff;\r\n}\r\n.hotspot__container::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: scale(2.3);\r\n}  \r\n.hotspot__settings{\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid #5395ff;\r\n  padding: 15px;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 8;\r\n} \r\n.hotspot__settings span {\r\n  cursor: pointer;\r\n  background-color: #5395ff;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  padding: 2px 5px;\r\n  border-radius: 50%;\r\n  right: -8px;\r\n}\r\n.hotspot__settings .settings__close{\r\n  top: -6px;\r\n}\r\n.hotspot__settings .settings__text {\r\n  font-weight: bold;\r\n  bottom:-6px;\r\n}\r\n.hotspot__text {\r\n  position: absolute;\r\n  bottom: -70%;\r\n  left: 50%;\r\n  width: max-content;\r\n  transform: translateX(-50%);\r\n} \r\n.hotspot__input {\r\n  background: #cccccc7d;\r\n  width: 200px;\r\n  border: 0;\r\n  outline: none;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n}\r\n\r\n.hotspot_dot {\r\n  border-radius: 50%;\r\n}\r\n.hotspot {\r\n  font-size: 16px;\r\n  line-height: 30px;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0.85;\r\n  background: #fff;\r\n  position: relative;\r\n  z-index: 10;\r\n  \r\n}\r\n.hotspot::before {\r\n  content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    right: 0;\r\n    background: inherit;\r\n    opacity: 0.5;\r\n    transform: scale(1.5);\r\n    border-radius: inherit;\r\n    animation: animate 1.5s linear infinite alternate; \r\n}\r\n\r\n.hotspot__hint {\r\n  border-radius: 5px;\r\n  color: #333;\r\n  background: #cccccc7d;\r\n  padding: 10px;\r\n  position: absolute;\r\n  top: 26px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  text-align: center;\r\n}\r\n@keyframes animate {\r\n  0% {\r\n    transform: scale(1.1);  \r\n  }\r\n  100% {\r\n    transform: scale(1.4);\r\n  }\r\n}\r\n    \r\n.hotspot_dot {\r\n  border-radius: 50%;\r\n}\r\n.open-btn {\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}