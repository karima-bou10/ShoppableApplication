{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport Dashboard from \"../views/Dashboard.vue\";\nimport Home from \"../views/Home.vue\";\nimport AuthService from \"../services/auth.service\";\nimport Login from \"../views/login.vue\";\nimport Register from \"../views/Register.vue\";\nimport Products from \"../views/Products.vue\";\nimport Orders from \"../views/Orders.vue\";\nimport ShoppableImage from \"../views/ShoppableImage.vue\";\nimport MessageToBuyer from \"../views/MessageToBuyer.vue\";\nimport Users from \"../views/Users.vue\";\nimport UserDashboard from \"../views/UserDashboard.vue\";\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: \"/\",\n    component: Login\n  }, {\n    path: \"/register\",\n    component: Register\n  }, {\n    path: \"/admin\",\n    component: Home,\n    meta: {\n      requiresAuth: true\n    },\n    children: [{\n      path: \"\",\n      redirect: \"dashboard\"\n    }, {\n      path: \"/dashboard\",\n      component: Dashboard,\n      meta: {\n        title: \"Dashboard\"\n      }\n    }, {\n      path: \"/products\",\n      component: Products,\n      meta: {\n        title: \"Products\"\n      }\n    }, {\n      path: \"/orders\",\n      component: Orders,\n      meta: {\n        title: \"Orders\"\n      }\n    }, {\n      path: \"/shoppable_image\",\n      component: ShoppableImage,\n      meta: {\n        title: \"ShoppableImage\"\n      }\n    }, {\n      path: \"/message_to_buyer\",\n      component: MessageToBuyer,\n      meta: {\n        title: \"Message To Buyer\"\n      }\n    }, {\n      path: \"/users\",\n      component: Users,\n      meta: {\n        title: \"Users\"\n      }\n    }]\n  }, {\n    path: \"/user\",\n    component: UserDashboard,\n    meta: {\n      requiresAuth: true\n    },\n    children: [{\n      path: \"\",\n      redirect: \"dashboard\"\n    }, {\n      path: \"dashboard\",\n      component: UserDashboard,\n      meta: {\n        title: \"User Dashboard\"\n      }\n    }\n    // Add user-specific routes here\n    ]\n  }]\n});\n// Navigation guard to check authentication for protected routes\nrouter.beforeEach((to, from, next) => {\n  // Check if the route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // Check if user is authenticated\n    if (!AuthService.isAuthenticated()) {\n      // Redirect to login page if not authenticated\n      next(\"/\");\n    } else {\n      // Continue to the route if authenticated\n      next();\n    }\n  } else {\n    // Continue to the route if no authentication required\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Dashboard","Home","AuthService","Login","Register","Products","Orders","ShoppableImage","MessageToBuyer","Users","UserDashboard","router","history","routes","path","component","meta","requiresAuth","children","redirect","title","beforeEach","to","from","next","matched","some","record","isAuthenticated"],"sources":["C:/Users/Utente/Desktop/ShoppableApplication/admin/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport Dashboard from \"../views/Dashboard.vue\";\r\nimport Home from \"../views/Home.vue\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Login from \"../views/login.vue\";\r\nimport Register from \"../views/Register.vue\";\r\nimport Products from \"../views/Products.vue\";\r\nimport Orders from \"../views/Orders.vue\";\r\nimport ShoppableImage from \"../views/ShoppableImage.vue\";\r\nimport MessageToBuyer from \"../views/MessageToBuyer.vue\";\r\nimport Users from \"../views/Users.vue\";\r\nimport UserDashboard from \"../views/UserDashboard.vue\";\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes: [\r\n    {\r\n      path: \"/\",\r\n      component: Login,\r\n    },\r\n    { path: \"/register\", component: Register },\r\n    {\r\n      path: \"/admin\",\r\n      component: Home,\r\n      meta: { requiresAuth: true },\r\n      children: [\r\n        { path: \"\", redirect: \"dashboard\" },\r\n        {\r\n          path: \"/dashboard\",\r\n          component: Dashboard,\r\n          meta: { title: \"Dashboard\" },\r\n        },\r\n        { path: \"/products\", component: Products, meta: { title: \"Products\" } },\r\n        { path: \"/orders\", component: Orders, meta: { title: \"Orders\" } },\r\n        {\r\n          path: \"/shoppable_image\",\r\n          component: ShoppableImage,\r\n          meta: { title: \"ShoppableImage\" },\r\n        },\r\n        {\r\n          path: \"/message_to_buyer\",\r\n          component: MessageToBuyer,\r\n          meta: { title: \"Message To Buyer\" },\r\n        },\r\n        {\r\n          path: \"/users\",\r\n          component: Users,\r\n          meta: { title: \"Users\" },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: \"/user\",\r\n      component: UserDashboard,\r\n      meta: { requiresAuth: true },\r\n      children: [\r\n        { path: \"\", redirect: \"dashboard\" },\r\n        {\r\n          path: \"dashboard\",\r\n          component: UserDashboard,\r\n          meta: { title: \"User Dashboard\" },\r\n        },\r\n        // Add user-specific routes here\r\n      ],\r\n    },\r\n  ],\r\n});\r\n// Navigation guard to check authentication for protected routes\r\nrouter.beforeEach((to, from, next) => {\r\n  // Check if the route requires authentication\r\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\r\n    // Check if user is authenticated\r\n    if (!AuthService.isAuthenticated()) {\r\n      // Redirect to login page if not authenticated\r\n      next(\"/\");\r\n    } else {\r\n      // Continue to the route if authenticated\r\n      next();\r\n    }\r\n  } else {\r\n    // Continue to the route if no authentication required\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,aAAa,MAAM,4BAA4B;AAEtD,MAAMC,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3Bc,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,SAAS,EAAEZ;EACb,CAAC,EACD;IAAEW,IAAI,EAAE,WAAW;IAAEC,SAAS,EAAEX;EAAS,CAAC,EAC1C;IACEU,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAEd,IAAI;IACfe,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK,CAAC;IAC5BC,QAAQ,EAAE,CACR;MAAEJ,IAAI,EAAE,EAAE;MAAEK,QAAQ,EAAE;IAAY,CAAC,EACnC;MACEL,IAAI,EAAE,YAAY;MAClBC,SAAS,EAAEf,SAAS;MACpBgB,IAAI,EAAE;QAAEI,KAAK,EAAE;MAAY;IAC7B,CAAC,EACD;MAAEN,IAAI,EAAE,WAAW;MAAEC,SAAS,EAAEV,QAAQ;MAAEW,IAAI,EAAE;QAAEI,KAAK,EAAE;MAAW;IAAE,CAAC,EACvE;MAAEN,IAAI,EAAE,SAAS;MAAEC,SAAS,EAAET,MAAM;MAAEU,IAAI,EAAE;QAAEI,KAAK,EAAE;MAAS;IAAE,CAAC,EACjE;MACEN,IAAI,EAAE,kBAAkB;MACxBC,SAAS,EAAER,cAAc;MACzBS,IAAI,EAAE;QAAEI,KAAK,EAAE;MAAiB;IAClC,CAAC,EACD;MACEN,IAAI,EAAE,mBAAmB;MACzBC,SAAS,EAAEP,cAAc;MACzBQ,IAAI,EAAE;QAAEI,KAAK,EAAE;MAAmB;IACpC,CAAC,EACD;MACEN,IAAI,EAAE,QAAQ;MACdC,SAAS,EAAEN,KAAK;MAChBO,IAAI,EAAE;QAAEI,KAAK,EAAE;MAAQ;IACzB,CAAC;EAEL,CAAC,EACD;IACEN,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEL,aAAa;IACxBM,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK,CAAC;IAC5BC,QAAQ,EAAE,CACR;MAAEJ,IAAI,EAAE,EAAE;MAAEK,QAAQ,EAAE;IAAY,CAAC,EACnC;MACEL,IAAI,EAAE,WAAW;MACjBC,SAAS,EAAEL,aAAa;MACxBM,IAAI,EAAE;QAAEI,KAAK,EAAE;MAAiB;IAClC;IACA;IAAA;EAEJ,CAAC;AAEL,CAAC,CAAC;AACF;AACAT,MAAM,CAACU,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACX,IAAI,CAACC,YAAY,CAAC,EAAE;IACzD;IACA,IAAI,CAACf,WAAW,CAAC0B,eAAe,CAAC,CAAC,EAAE;MAClC;MACAJ,IAAI,CAAC,GAAG,CAAC;IACX,CAAC,MAAM;MACL;MACAA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACL;IACAA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeb,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}