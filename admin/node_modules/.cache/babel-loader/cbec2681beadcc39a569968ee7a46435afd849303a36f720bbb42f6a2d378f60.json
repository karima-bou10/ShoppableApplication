{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport authService from \"@/services/auth.service\";\nimport userService from \"../services/user.service\";\nimport EditUserModal from \"../components/User/EditUserModal.vue\";\nimport deleteUserModal from \"../components/User/deleteUserModal.vue\";\nexport default {\n  name: \"user\",\n  components: {\n    EditUserModal,\n    deleteUserModal\n  },\n  data() {\n    return {\n      buttonText: \"Upload Image\",\n      showModal: false,\n      uploadedImage: null,\n      // Add a data property to store the uploaded image\n      accessMessage: \"\",\n      users: [],\n      successMessage: false,\n      // Define data properties for managing modal and selected user\n      showEditModal: false,\n      showDeleteModal: false,\n      selectedUser: null,\n      showSuccessAlert: false\n    };\n  },\n  methods: {\n    // Method to open edit modal and set selected user\n    editUser(user) {\n      console.log(user);\n      this.showEditModal = true;\n      this.selectedUser = user;\n      console.log(user.id);\n    },\n    deleteUser(user) {\n      console.log(user);\n      this.selectedUser = user;\n      this.showDeleteModal = true;\n      console.log(user._id);\n    },\n    async handleDeletetUser() {},\n    async handleEditUser(updatedUserData) {\n      // Handle the edited user data\n      console.log(\"Edited user data:\", updatedUserData);\n      // Fetch the updated list of users\n      const updatedUsersResponse = await userService.getAllUsers();\n      // Update the users array with the newly fetched list\n      this.users = updatedUsersResponse.data;\n      this.showSuccessAlert = true;\n      console.log(this.showSuccessAlert);\n    },\n    handleModalClose() {\n      // Handle the modal close event here\n      this.showEditModal = false; // Close the modal\n    },\n    closeSuccessAlert() {\n      // Method to close the success alert\n      this.showSuccessAlert = false;\n    },\n    async handleSubmit(event) {\n      event.preventDefault();\n\n      // Extract user input from form fields\n      const username = event.target.elements.username.value;\n      const email = event.target.elements.email.value;\n      const phoneNumber = event.target.elements.phoneNumber.value;\n      const address = event.target.elements.address.value;\n      const password = event.target.elements.password.value;\n      const user = {\n        username: username,\n        email: email,\n        password: password,\n        phoneNumber: phoneNumber,\n        address: address\n      };\n      try {\n        // Call the register method of authService to sign up the user\n        const response = await authService.register(user);\n\n        // Handle success response\n        this.accessMessage = response.data.message;\n        this.successMessage = true;\n        // Fetch the updated list of users\n        const updatedUsersResponse = await userService.getAllUsers();\n        // Update the users array with the newly fetched list\n        this.users = updatedUsersResponse.data;\n      } catch (error) {\n        // Handle error\n        console.error(\"Error signing up:\", error);\n        // Display error message to the user\n        this.accessMessage = error.response.data.message || \"An error occurred while signing up.\";\n        this.successMessage = false;\n      }\n    },\n    closeModal() {\n      // Close the modal\n      this.showModal = false;\n      // Clear the accessMessage when modal is closed\n      this.accessMessage = \"\";\n    },\n    selectImage() {\n      this.$refs.fileInput.click();\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      this.uploadedImage = URL.createObjectURL(file);\n      this.buttonText = \"Change Image\";\n    }\n  },\n  async mounted() {\n    // Move mounted method outside of the methods object\n    // Call getAllUsers method when the component is mounted\n    console.log(\"Component mounted\");\n    try {\n      const response = await userService.getAllUsers();\n      this.users = response.data; // Assign fetched users to the data property\n      // Map the users to include only the necessary fields (including the ID)\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      // Handle error\n    }\n  }\n};","map":{"version":3,"names":["authService","userService","EditUserModal","deleteUserModal","name","components","data","buttonText","showModal","uploadedImage","accessMessage","users","successMessage","showEditModal","showDeleteModal","selectedUser","showSuccessAlert","methods","editUser","user","console","log","id","deleteUser","_id","handleDeletetUser","handleEditUser","updatedUserData","updatedUsersResponse","getAllUsers","handleModalClose","closeSuccessAlert","handleSubmit","event","preventDefault","username","target","elements","value","email","phoneNumber","address","password","response","register","message","error","closeModal","selectImage","$refs","fileInput","click","handleImageUpload","file","files","URL","createObjectURL","mounted"],"sources":["C:\\Users\\Utente\\Desktop\\ShoppableApplication\\admin\\src\\views\\Users.vue"],"sourcesContent":["<template>\r\n  <main id=\"Users-page\">\r\n    <form class=\"flex items-center ml-12 mt-20\">\r\n      <label for=\"search\" class=\"sr-only\">Search</label>\r\n      <div class=\"relative w-full\">\r\n        <div\r\n          class=\"absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none\"\r\n        >\r\n          <svg\r\n            class=\"w-4 h-4 me-2\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 20 20\"\r\n          >\r\n            <path\r\n              stroke=\"#8a8a8a\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"2\"\r\n              d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block ps-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n          placeholder=\"Search ...\"\r\n          style=\"width: 20rem\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Modal toggle -->\r\n      <button\r\n        id=\"show-modal\"\r\n        class=\"flex justify-around items-center py-2 px-3 ms-2 me-6 text-base font-medium text-white bg-blue-800 rounded-full border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n        type=\"button\"\r\n        @click=\"showModal = true\"\r\n      >\r\n        <svg\r\n          class=\"w-6 h-6 me-2 mt-0.5\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 20 20\"\r\n          style=\"margin-top: -6px\"\r\n        >\r\n          <path\r\n            stroke=\"#ffffff\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n            stroke-width=\"2\"\r\n            d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n          />\r\n        </svg>\r\n        <span class=\"whitespace-nowrap\">Add user</span>\r\n      </button>\r\n    </form>\r\n    <!-- Products Table  -->\r\n    <div\r\n      class=\"table-container relative overflow-x-auto shadow-md sm:rounded-lg my-8 mx-7 overflow-y-scroll\"\r\n    >\r\n      <table\r\n        class=\"w-full text-sm rtl:text-right text-gray-500 dark:text-gray-400\"\r\n      >\r\n        <thead\r\n          class=\"sticky top-0 text-xs uppercase rounded-full dark:bg-gray-700 dark:text-gray-400\"\r\n        >\r\n          <tr>\r\n            <th scope=\"col\" class=\"px-3 py-3\">\r\n              <span class=\"sr-only\">Image</span>\r\n            </th>\r\n            <th scope=\"col\" class=\"px-6 py-3\">User Id</th>\r\n            <th scope=\"col\" class=\"px-6 py-3\">Name</th>\r\n            <th scope=\"col\" class=\"px-6 py-3\">Phone number</th>\r\n            <th scope=\"col\" class=\"px-6 py-3\">email</th>\r\n            <th scope=\"col\" class=\"px-6 py-3 whitespace-nowrap\">Address</th>\r\n\r\n            <th scope=\"col\" class=\"px-6 py-3\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"(user, index) in users\"\r\n            :key=\"index\"\r\n            class=\"odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700\"\r\n          >\r\n            <td class=\"p-4\">\r\n              <img\r\n                src=\"../assets/user.png\"\r\n                class=\"md:w-12 max-w-full max-h-full rounded-full\"\r\n                alt=\"Apple Watch\"\r\n              />\r\n            </td>\r\n            <td\r\n              scope=\"row\"\r\n              class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\r\n            >\r\n              {{ index + 1 }}\r\n            </td>\r\n            <td class=\"px-6 py-4\">{{ user.username }}</td>\r\n            <td class=\"px-6 py-4\">{{ user.phoneNumber }}</td>\r\n            <td class=\"px-6 py-4\">{{ user.email }}</td>\r\n            <td class=\"px-6 py-4\">{{ user.address }}</td>\r\n\r\n            <td class=\"px-6 py-4\">\r\n              <div class=\"button-group flex justify-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"action-button edit-button\"\r\n                  @click=\"editUser(user)\"\r\n                >\r\n                  <div class=\"icon-container\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 512 512\"\r\n                    >\r\n                      <path\r\n                        fill=\"#ffffff\"\r\n                        d=\"M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"action-button delete-button\"\r\n                  @click=\"deleteUser(user)\"\r\n                >\r\n                  <div class=\"icon-container\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 448 512\"\r\n                    >\r\n                      <path\r\n                        fill=\"#ffffff\"\r\n                        d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0H284.2c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64S14.3 32 32 32h96l7.2-14.3zM32 128H416V448c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- create user modal -->\r\n      <Transition name=\"modal\">\r\n        <div\r\n          v-if=\"showModal\"\r\n          tabindex=\"-1\"\r\n          aria-hidden=\"true\"\r\n          class=\"modal-mask hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center md:inset-0 h-[calc(100%-1rem)] max-h-full\"\r\n        >\r\n          <form class=\"p-4 md:p-5 w-full max-w-xl mx-auto\">\r\n            <div class=\"relative p-4 w-full max-w-3xl max-h-full\">\r\n              <!-- Modal content -->\r\n              <div class=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n                <!-- Modal header -->\r\n                <div\r\n                  class=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600\"\r\n                >\r\n                  <h3\r\n                    class=\"text-lg font-semibold text-gray-900 dark:text-white\"\r\n                  >\r\n                    Create New User\r\n                  </h3>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\r\n                    data-modal-toggle=\"crud-modal\"\r\n                    @click=\"closeModal\"\r\n                  >\r\n                    <svg\r\n                      class=\"w-3 h-3\"\r\n                      aria-hidden=\"true\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 14 14\"\r\n                    >\r\n                      <path\r\n                        stroke=\"currentColor\"\r\n                        stroke-linecap=\"round\"\r\n                        stroke-linejoin=\"round\"\r\n                        stroke-width=\"2\"\r\n                        d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                      />\r\n                    </svg>\r\n                    <span class=\"sr-only\">Close modal</span>\r\n                  </button>\r\n                </div>\r\n                <!-- Modal body -->\r\n                <form\r\n                  class=\"p-4 md:p-5 w-full max-w-xl mx-auto\"\r\n                  @submit.prevent=\"handleSubmit\"\r\n                  method=\"POST\"\r\n                >\r\n                  <div class=\"flex flex-col justify_center\">\r\n                    <div class=\"px-4 py-1 m-2\">\r\n                      <label\r\n                        for=\"userName\"\r\n                        class=\"block mb-2 text-sm font-medium text-left text-gray-900 dark:text-white\"\r\n                        >Full Name</label\r\n                      >\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"userName\"\r\n                        class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\r\n                        placeholder=\"Type user name\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div class=\"px-4 py-2 m-2\">\r\n                      <label\r\n                        for=\"phoneNumber\"\r\n                        class=\"block mb-2 text-sm font-medium text-left text-gray-900 dark:text-white\"\r\n                        >Phone number</label\r\n                      >\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\r\n                        placeholder=\"Type user phone number\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div class=\"px-4 py-2 m-2\">\r\n                      <label\r\n                        for=\"address\"\r\n                        class=\"block mb-2 text-sm font-medium text-left text-gray-900 dark:text-white\"\r\n                        >Address</label\r\n                      >\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        id=\"address\"\r\n                        class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\r\n                        required\r\n                        placeholder=\"Type user address\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"px-4 py-2 m-2\">\r\n                      <label\r\n                        for=\"email\"\r\n                        class=\"block mb-2 text-sm font-medium text-left text-gray-900 dark:text-white\"\r\n                        >Email</label\r\n                      >\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\r\n                        required\r\n                        placeholder=\"Type user email\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"px-4 py-2 m-2\">\r\n                      <label\r\n                        for=\"password\"\r\n                        class=\"block mb-2 text-sm font-medium text-left text-gray-900 dark:text-white\"\r\n                        >Password</label\r\n                      >\r\n                      <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\r\n                        required\r\n                        placeholder=\"Type user password\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"text-white mt-4 mb-4 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <div\r\n                    v-if=\"accessMessage\"\r\n                    :class=\"{\r\n                      'text-green-600': successMessage,\r\n                      'text-red-600': !successMessage,\r\n                    }\"\r\n                  >\r\n                    {{ accessMessage }}\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Transition>\r\n      <!-- Success alert -->\r\n      <!-- Edit User Modal -->\r\n      <EditUserModal\r\n        v-if=\"showEditModal\"\r\n        :user=\"selectedUser\"\r\n        @edit-user=\"handleEditUser\"\r\n        @close=\"handleModalClose\"\r\n      />\r\n      <deleteUserModal\r\n        v-if=\"showDeleteModal\"\r\n        :user=\"selectedUser\"\r\n        @edit-user=\"handleDeletetUser\"\r\n        @close=\"showDeleteModal = false\"\r\n      />\r\n    </div>\r\n    <div\r\n      v-if=\"showSuccessAlert\"\r\n      id=\"alert-3\"\r\n      class=\"flex items-center p-4 mb-4 text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400\"\r\n      role=\"alert\"\r\n    >\r\n      <svg\r\n        class=\"flex-shrink-0 w-4 h-4\"\r\n        aria-hidden=\"true\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"currentColor\"\r\n        viewBox=\"0 0 20 20\"\r\n      >\r\n        <path\r\n          d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\"\r\n        />\r\n      </svg>\r\n      <span class=\"sr-only\">Info</span>\r\n      <div class=\"ms-3 text-sm font-medium\">\r\n        <span class=\"font-medium\">Success alert!</span> User was updated\r\n        successfully.\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"ms-auto -mx-1.5 -my-1.5 bg-green-50 text-green-500 rounded-lg focus:ring-2 focus:ring-green-400 p-1.5 hover:bg-green-200 inline-flex items-center justify-center h-8 w-8 dark:bg-gray-800 dark:text-green-400 dark:hover:bg-gray-700\"\r\n        data-dismiss-target=\"#alert-3\"\r\n        aria-label=\"Close\"\r\n        @click=\"closeSuccessAlert\"\r\n      >\r\n        <span class=\"sr-only\">Close</span>\r\n        <svg\r\n          class=\"w-3 h-3\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 14 14\"\r\n        >\r\n          <path\r\n            stroke=\"currentColor\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n            stroke-width=\"2\"\r\n            d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport authService from \"@/services/auth.service\";\r\nimport userService from \"../services/user.service\";\r\nimport EditUserModal from \"../components/User/EditUserModal.vue\";\r\nimport deleteUserModal from \"../components/User/deleteUserModal.vue\";\r\n\r\nexport default {\r\n  name: \"user\",\r\n  components: {\r\n    EditUserModal,\r\n    deleteUserModal,\r\n  },\r\n  data() {\r\n    return {\r\n      buttonText: \"Upload Image\",\r\n      showModal: false,\r\n      uploadedImage: null, // Add a data property to store the uploaded image\r\n      accessMessage: \"\",\r\n      users: [],\r\n      successMessage: false,\r\n      // Define data properties for managing modal and selected user\r\n      showEditModal: false,\r\n      showDeleteModal: false,\r\n      selectedUser: null,\r\n      showSuccessAlert: false,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    // Method to open edit modal and set selected user\r\n    editUser(user) {\r\n      console.log(user);\r\n      this.showEditModal = true;\r\n      this.selectedUser = user;\r\n      console.log(user.id);\r\n    },\r\n    deleteUser(user) {\r\n      console.log(user);\r\n      this.selectedUser = user;\r\n      this.showDeleteModal = true;\r\n      console.log(user._id);\r\n    },\r\n    async handleDeletetUser() {},\r\n    async handleEditUser(updatedUserData) {\r\n      // Handle the edited user data\r\n      console.log(\"Edited user data:\", updatedUserData);\r\n      // Fetch the updated list of users\r\n      const updatedUsersResponse = await userService.getAllUsers();\r\n      // Update the users array with the newly fetched list\r\n      this.users = updatedUsersResponse.data;\r\n      this.showSuccessAlert = true;\r\n      console.log(this.showSuccessAlert);\r\n    },\r\n    handleModalClose() {\r\n      // Handle the modal close event here\r\n      this.showEditModal = false; // Close the modal\r\n    },\r\n    closeSuccessAlert() {\r\n      // Method to close the success alert\r\n      this.showSuccessAlert = false;\r\n    },\r\n    async handleSubmit(event) {\r\n      event.preventDefault();\r\n\r\n      // Extract user input from form fields\r\n      const username = event.target.elements.username.value;\r\n      const email = event.target.elements.email.value;\r\n      const phoneNumber = event.target.elements.phoneNumber.value;\r\n      const address = event.target.elements.address.value;\r\n      const password = event.target.elements.password.value;\r\n\r\n      const user = {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        phoneNumber: phoneNumber,\r\n        address: address,\r\n      };\r\n      try {\r\n        // Call the register method of authService to sign up the user\r\n        const response = await authService.register(user);\r\n\r\n        // Handle success response\r\n        this.accessMessage = response.data.message;\r\n        this.successMessage = true;\r\n        // Fetch the updated list of users\r\n        const updatedUsersResponse = await userService.getAllUsers();\r\n        // Update the users array with the newly fetched list\r\n        this.users = updatedUsersResponse.data;\r\n      } catch (error) {\r\n        // Handle error\r\n        console.error(\"Error signing up:\", error);\r\n        // Display error message to the user\r\n        this.accessMessage =\r\n          error.response.data.message || \"An error occurred while signing up.\";\r\n        this.successMessage = false;\r\n      }\r\n    },\r\n    closeModal() {\r\n      // Close the modal\r\n      this.showModal = false;\r\n      // Clear the accessMessage when modal is closed\r\n      this.accessMessage = \"\";\r\n    },\r\n    selectImage() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      this.uploadedImage = URL.createObjectURL(file);\r\n      this.buttonText = \"Change Image\";\r\n    },\r\n  },\r\n  async mounted() {\r\n    // Move mounted method outside of the methods object\r\n    // Call getAllUsers method when the component is mounted\r\n    console.log(\"Component mounted\");\r\n    try {\r\n      const response = await userService.getAllUsers();\r\n\r\n      this.users = response.data; // Assign fetched users to the data property\r\n      // Map the users to include only the necessary fields (including the ID)\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n      // Handle error\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.table-container {\r\n  height: 405px;\r\n}\r\ntd,\r\nth {\r\n  text-align: center;\r\n}\r\ntd {\r\n  padding-top: 1rem;\r\n  padding-bottom: 1rem;\r\n}\r\nthead {\r\n  background-color: var(--primary);\r\n  color: var(--white);\r\n}\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 3px;\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: var(--primary);\r\n  border-radius: 5px;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #004aad;\r\n}\r\n.button-group {\r\n  padding: 5% 10% 5% 10%;\r\n  margin-top: -2px;\r\n}\r\n.action-button {\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n  padding: 15%;\r\n  border-radius: 50%;\r\n  background-color: #476ffe;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.icon-container {\r\n  height: 14px;\r\n  margin: 5px auto;\r\n  display: flex;\r\n}\r\n.edit-button {\r\n  margin-right: 0.8rem;\r\n}\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  transition: opacity 0.3s ease;\r\n}\r\n.modal-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter-from .modal-container,\r\n.modal-leave-to .modal-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n.grid-cols-custom {\r\n  grid-template-columns: 1fr 1fr 2fr; /* 3ème colonne prend 2 fois la taille de la 2ème */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}