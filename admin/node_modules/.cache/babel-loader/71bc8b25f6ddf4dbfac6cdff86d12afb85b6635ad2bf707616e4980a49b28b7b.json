{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\nclass AuthService {\n  isAuthenticated() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return user && user.accessToken; // Check if user is logged in and has an access token\n  }\n  logout() {\n    localStorage.removeItem(\"user\"); // Clear user data from localStorage\n    localStorage.removeItem(\"token\"); // Clear token from localStorage\n  }\n  login(user) {\n    return axios.post(API_URL + \"signin\", {\n      username: user.username,\n      password: user.password,\n      role: user.role\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  register(user) {\n    return axios.post(API_URL + \"signup\", {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    });\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","isAuthenticated","user","JSON","parse","localStorage","getItem","accessToken","logout","removeItem","login","post","username","password","role","then","response","data","setItem","stringify","register","email"],"sources":["C:/Users/Utente/Desktop/ShoppableApplication/admin/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  isAuthenticated() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    return user && user.accessToken; // Check if user is logged in and has an access token\r\n  }\r\n  logout() {\r\n    localStorage.removeItem(\"user\"); // Clear user data from localStorage\r\n    localStorage.removeItem(\"token\"); // Clear token from localStorage\r\n  }\r\n  login(user) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username: user.username,\r\n        password: user.password,\r\n        role: user.role,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(user) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,WAAW,CAAC;EAChBC,eAAeA,CAAA,EAAG;IAChB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,OAAOJ,IAAI,IAAIA,IAAI,CAACK,WAAW,CAAC,CAAC;EACnC;EACAC,MAAMA,CAAA,EAAG;IACPH,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACjCJ,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;EACpC;EACAC,KAAKA,CAACR,IAAI,EAAE;IACV,OAAOJ,KAAK,CACTa,IAAI,CAACZ,OAAO,GAAG,QAAQ,EAAE;MACxBa,QAAQ,EAAEV,IAAI,CAACU,QAAQ;MACvBC,QAAQ,EAAEX,IAAI,CAACW,QAAQ;MACvBC,IAAI,EAAEZ,IAAI,CAACY;IACb,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,IAAI,CAACV,WAAW,EAAE;QAC7BF,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEf,IAAI,CAACgB,SAAS,CAACH,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MAEA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAT,MAAMA,CAAA,EAAG;IACPH,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAW,QAAQA,CAAClB,IAAI,EAAE;IACb,OAAOJ,KAAK,CAACa,IAAI,CAACZ,OAAO,GAAG,QAAQ,EAAE;MACpCa,QAAQ,EAAEV,IAAI,CAACU,QAAQ;MACvBS,KAAK,EAAEnB,IAAI,CAACmB,KAAK;MACjBR,QAAQ,EAAEX,IAAI,CAACW;IACjB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIb,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}